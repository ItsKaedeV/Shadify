{"version":3,"file":"WebShaderWallpaper.js","mappings":"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","sources":["webpack://WebShaderWallpaper/./src/WebShaderWallpaper.ts","webpack://WebShaderWallpaper/./src/index.ts","webpack://WebShaderWallpaper/webpack/bootstrap","webpack://WebShaderWallpaper/webpack/startup"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WebShaderWallpaper = void 0;\nvar WebShaderWallpaper;\n(function (WebShaderWallpaper) {\n    const vertShader = `\n      attribute vec2 coords;\n      void main(void) {\n          gl_Position = vec4(coords.xy, 0.0, 1.0);\n      }\n  `;\n    function createShader(gl, sourceCode, type) {\n        const shader = gl.createShader(type);\n        gl.shaderSource(shader, sourceCode);\n        gl.compileShader(shader);\n        if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n            const info = gl.getShaderInfoLog(shader);\n            throw `Could not compile WebGL program. \\n\\n${info}`;\n        }\n        return shader;\n    }\n    class Wallpaper {\n        constructor(fragShader, target) {\n            this.running = true;\n            this.eventHandlerResize = this.resize.bind(this);\n            this.eventHandlerMouse = this.mouse.bind(this);\n            this.quality = 2;\n            this.speed = 1;\n            // Get gl context from canvas\n            this.canvas = document.createElement(\"canvas\");\n            this.target = target;\n            target.append(this.canvas);\n            if (target !== document.body) {\n                const style = getComputedStyle(target);\n                const radius = style.borderRadius || 0;\n                target.style.clipPath = `inset(0 0 0 0 round ${radius})`;\n            }\n            this.canvas.style.position = \"fixed\";\n            this.canvas.style.left = \"0%\";\n            this.canvas.style.right = \"0%\";\n            this.canvas.style.top = \"0%\";\n            this.canvas.style.bottom = \"0%\";\n            this.canvas.style.width = \"100%\";\n            this.canvas.style.height = \"100%\";\n            this.canvas.style.zIndex = \"-1\";\n            this.updateAttributes();\n            this.gl = (this.canvas.getContext(\"webgl\") || this.canvas.getContext(\"experimental-webgl\"));\n            // Create shader program\n            this.pid = this.gl.createProgram();\n            // Compile vertex shader\n            this.vert = createShader(this.gl, vertShader, this.gl.VERTEX_SHADER);\n            this.gl.attachShader(this.pid, this.vert);\n            // Compile fragment shader\n            this.frag = createShader(this.gl, fragShader, this.gl.FRAGMENT_SHADER);\n            this.gl.attachShader(this.pid, this.frag);\n            this.gl.linkProgram(this.pid);\n            this.gl.useProgram(this.pid);\n            // Create buffer\n            let array = new Float32Array([-1, 3, -1, -1, 3, -1]);\n            this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.gl.createBuffer());\n            this.gl.bufferData(this.gl.ARRAY_BUFFER, array, this.gl.STATIC_DRAW);\n            let al = this.gl.getAttribLocation(this.pid, \"coords\");\n            this.gl.vertexAttribPointer(al, 2, this.gl.FLOAT, false, 0, 0);\n            this.gl.enableVertexAttribArray(al);\n            // Read uniforms\n            this.uniformResolution = this.gl.getUniformLocation(this.pid, \"resolution\");\n            this.uniformTime = this.gl.getUniformLocation(this.pid, \"time\");\n            this.uniformMouse = this.gl.getUniformLocation(this.pid, \"mouse\");\n            window.addEventListener(\"resize\", this.eventHandlerResize);\n            window.addEventListener(\"mousemove\", this.eventHandlerMouse);\n            const observer = new MutationObserver((_) => {\n                this.updateAttributes();\n            });\n            observer.observe(target, {\n                subtree: false,\n                childList: false,\n                attributes: true,\n                attributeFilter: [\"data-shader\", \"data-shader-quality\", \"data-shader-speed\"],\n            });\n            this.update();\n        }\n        updateAttributes() {\n            var _a, _b, _c;\n            this.quality = Number((_a = this.target.attributes.getNamedItem(\"data-shader-quality\")) === null || _a === void 0 ? void 0 : _a.value) || this.quality;\n            this.speed = Number((_b = this.target.attributes.getNamedItem(\"data-shader-speed\")) === null || _b === void 0 ? void 0 : _b.value) || this.speed;\n            if (!((_c = this.target.attributes.getNamedItem(\"data-shader\")) === null || _c === void 0 ? void 0 : _c.value))\n                this.destroy();\n            this.resize();\n            console.log(\"resize\", this, this.speed);\n        }\n        resize() {\n            this.canvas.width = window.innerWidth / this.quality;\n            this.canvas.height = window.innerHeight / this.quality;\n        }\n        mouse(e) {\n            this.mouseX = e.clientX;\n            this.mouseY = e.clientY;\n        }\n        update() {\n            const { width, height } = this.canvas;\n            if (!this.running)\n                return;\n            this.gl.uniform2f(this.uniformMouse, this.mouseX / width / this.quality, 1 - this.mouseY / height / this.quality);\n            this.gl.uniform2f(this.uniformResolution, width, height);\n            this.gl.uniform1f(this.uniformTime, performance.now() / 1000 * this.speed);\n            this.gl.viewport(0, 0, width, height);\n            this.gl.clearColor(0, 0, 0, 0);\n            this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n            this.gl.drawArrays(this.gl.TRIANGLES, 0, 3);\n            requestAnimationFrame(this.update.bind(this));\n        }\n        destroy() {\n            this.target.shaderWallpaper = undefined;\n            this.running = false;\n            this.gl.deleteProgram(this.pid);\n            this.gl.deleteShader(this.vert);\n            this.gl.deleteShader(this.frag);\n            this.canvas.remove();\n            window.removeEventListener(\"resize\", this.eventHandlerResize);\n            window.removeEventListener(\"mousemove\", this.eventHandlerMouse);\n        }\n    }\n    function getCodeFromURL(url) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // link to glslsandbox website is a special case\n            if (url.includes(\"glslsandbox.com\") && url.includes(\"/e#\")) {\n                url = url.replace(\"/e#\", \"/item/\");\n                const res = yield fetch(url);\n                const text = yield res.json();\n                if (typeof text.code === \"undefined\")\n                    throw new Error(\"Could not get shader code\");\n                return text.code;\n            }\n            // otherwise we expect a link to a source file\n            const res = yield fetch(url);\n            return yield res.text();\n        });\n    }\n    function handleHTMLElement(target) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (target == null)\n                return;\n            const url = (_a = target.attributes.getNamedItem(\"data-shader\")) === null || _a === void 0 ? void 0 : _a.value;\n            if (url == null)\n                return;\n            if ((target === null || target === void 0 ? void 0 : target.shaderWallpaper) != null)\n                target.shaderWallpaper.destroy();\n            else\n                target.shaderWallpaper = new Wallpaper(yield getCodeFromURL(url), target);\n        });\n    }\n    function init() {\n        const observer = new MutationObserver((mutationList) => {\n            mutationList.forEach((mutation) => handleHTMLElement(mutation.target));\n        });\n        observer.observe(document.body, {\n            subtree: true,\n            childList: false,\n            attributeFilter: [\"data-shader\"]\n        });\n        console.log(\"start\");\n        document.querySelectorAll('[data-shader]').forEach((e) => handleHTMLElement(e));\n        document.removeEventListener(\"DOMContentLoaded\", init);\n    }\n    document.addEventListener(\"DOMContentLoaded\", init);\n})(WebShaderWallpaper || (exports.WebShaderWallpaper = WebShaderWallpaper = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst WebShaderWallpaper_1 = require(\"./WebShaderWallpaper\");\nexports.default = WebShaderWallpaper_1.WebShaderWallpaper;\nObject.assign(module.exports, WebShaderWallpaper_1.WebShaderWallpaper);\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(607);\n"],"names":["WebShaderWallpaper","__awaiter","this","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","createShader","gl","sourceCode","type","shader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","Wallpaper","constructor","fragShader","target","running","eventHandlerResize","resize","bind","eventHandlerMouse","mouse","quality","speed","canvas","document","createElement","append","body","radius","getComputedStyle","borderRadius","style","clipPath","position","left","right","top","bottom","width","height","zIndex","updateAttributes","getContext","pid","createProgram","vert","VERTEX_SHADER","attachShader","frag","FRAGMENT_SHADER","linkProgram","useProgram","array","Float32Array","bindBuffer","ARRAY_BUFFER","createBuffer","bufferData","STATIC_DRAW","al","getAttribLocation","vertexAttribPointer","FLOAT","enableVertexAttribArray","uniformResolution","getUniformLocation","uniformTime","uniformMouse","window","addEventListener","MutationObserver","_","observe","subtree","childList","attributes","attributeFilter","update","_a","_b","_c","Number","getNamedItem","destroy","console","log","innerWidth","innerHeight","mouseX","clientX","mouseY","clientY","uniform2f","uniform1f","performance","now","viewport","clearColor","clear","COLOR_BUFFER_BIT","drawArrays","TRIANGLES","requestAnimationFrame","shaderWallpaper","undefined","deleteProgram","deleteShader","remove","removeEventListener","handleHTMLElement","url","includes","replace","res","fetch","text","json","code","Error","getCodeFromURL","init","mutationList","forEach","mutation","querySelectorAll","WebShaderWallpaper_1","assign","module","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","call"],"sourceRoot":""}