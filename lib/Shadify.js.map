{"version":3,"file":"Shadify.js","mappings":"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","sources":["webpack://Shadify/./src/Shadify.ts","webpack://Shadify/./src/index.ts","webpack://Shadify/webpack/bootstrap","webpack://Shadify/webpack/startup"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Shadify = void 0;\nvar Shadify;\n(function (Shadify) {\n    const vertShader = `\n      attribute vec2 coords;\n      void main(void) {\n          gl_Position = vec4(coords.xy, 0.0, 1.0);\n      }\n  `;\n    class Wallpaper {\n        constructor(fragShader, target) {\n            this.running = true;\n            this.eventHandlerResize = this.resize.bind(this);\n            this.eventHandlerMouse = this.mouse.bind(this);\n            this._quality = 2;\n            this.speed = 1;\n            this.target = target;\n            if (this.target.tagName === \"CANVAS\") {\n                this.canvas = this.target;\n            }\n            else {\n                this.canvas = document.createElement(\"canvas\");\n                target.append(this.canvas);\n                // Setting this in body would break the fullscreen look\n                if (target !== document.body) {\n                    const style = getComputedStyle(target);\n                    const radius = style.borderRadius || 0;\n                    target.style.clipPath = `inset(0 0 0 0 round ${radius})`;\n                }\n                this.canvas.style.position = \"fixed\";\n                this.canvas.style.left = \"0%\";\n                this.canvas.style.right = \"0%\";\n                this.canvas.style.top = \"0%\";\n                this.canvas.style.bottom = \"0%\";\n                this.canvas.style.width = \"100%\";\n                this.canvas.style.height = \"100%\";\n            }\n            // Fetches the attributes and sets quality and speed if given\n            this.updateAttributes();\n            // Get gl context from canvas\n            this.gl = (this.canvas.getContext(\"webgl\") || this.canvas.getContext(\"experimental-webgl\"));\n            this.loadShader(fragShader);\n            // Create buffer\n            let array = new Float32Array([-1, 3, -1, -1, 3, -1]);\n            this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.gl.createBuffer());\n            this.gl.bufferData(this.gl.ARRAY_BUFFER, array, this.gl.STATIC_DRAW);\n            let al = this.gl.getAttribLocation(this.pid, \"coords\");\n            this.gl.vertexAttribPointer(al, 2, this.gl.FLOAT, false, 0, 0);\n            this.gl.enableVertexAttribArray(al);\n            window.addEventListener(\"resize\", this.eventHandlerResize);\n            window.addEventListener(\"mousemove\", this.eventHandlerMouse);\n            const observer = new MutationObserver((_) => {\n                this.updateAttributes();\n            });\n            observer.observe(target, {\n                subtree: false,\n                childList: false,\n                attributes: true,\n                attributeFilter: [\"data-shader\", \"data-shader-quality\", \"data-shader-speed\"],\n            });\n            this.update();\n        }\n        loadShader(fragShader) {\n            // Before initializing new shader, remove old ones if present\n            if (this.pid)\n                this.gl.deleteProgram(this.pid);\n            if (this.vert)\n                this.gl.deleteShader(this.vert);\n            if (this.frag)\n                this.gl.deleteShader(this.frag);\n            // Create shader program\n            this.pid = this.gl.createProgram();\n            // Compile vertex shader\n            this.vert = createShader(this.gl, vertShader, this.gl.VERTEX_SHADER);\n            this.gl.attachShader(this.pid, this.vert);\n            // Compile fragment shader\n            this.frag = createShader(this.gl, fragShader, this.gl.FRAGMENT_SHADER);\n            this.gl.attachShader(this.pid, this.frag);\n            this.gl.linkProgram(this.pid);\n            this.gl.useProgram(this.pid);\n            // Read uniforms\n            this.uniformResolution = this.gl.getUniformLocation(this.pid, \"resolution\");\n            this.uniformTime = this.gl.getUniformLocation(this.pid, \"time\");\n            this.uniformMouse = this.gl.getUniformLocation(this.pid, \"mouse\");\n        }\n        updateAttributes() {\n            var _a, _b, _c, _d;\n            this.quality = Number((_a = this.target.attributes.getNamedItem(\"data-shader-quality\")) === null || _a === void 0 ? void 0 : _a.value) || this.quality;\n            this.speed = Number((_b = this.target.attributes.getNamedItem(\"data-shader-speed\")) === null || _b === void 0 ? void 0 : _b.value) || this.speed;\n            this.canvas.style.zIndex = ((_c = this.target.attributes.getNamedItem(\"data-shader-z-index\")) === null || _c === void 0 ? void 0 : _c.value) || \"-1\";\n            if (!((_d = this.target.attributes.getNamedItem(\"data-shader\")) === null || _d === void 0 ? void 0 : _d.value)) {\n                this.destroy();\n            }\n        }\n        resize() {\n            if (this.target.tagName !== \"CANVAS\") {\n                this.canvas.width = window.innerWidth / this.quality;\n                this.canvas.height = window.innerHeight / this.quality;\n            }\n        }\n        mouse(e) {\n            this.mouseX = e.clientX;\n            this.mouseY = e.clientY;\n        }\n        update() {\n            const { width, height } = this.canvas;\n            if (!this.running)\n                return;\n            this.gl.uniform2f(this.uniformMouse, this.mouseX / width / this.quality, 1 - this.mouseY / height / this.quality);\n            this.gl.uniform2f(this.uniformResolution, width, height);\n            this.gl.uniform1f(this.uniformTime, performance.now() / 1000 * this.speed);\n            this.gl.viewport(0, 0, width, height);\n            this.gl.clearColor(0, 0, 0, 0);\n            this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n            this.gl.drawArrays(this.gl.TRIANGLES, 0, 3);\n            requestAnimationFrame(this.update.bind(this));\n        }\n        /**\n         * Returns a WebGLUniformLocation for the given name in the fragment shader.\n         * @param {string} name\n         * @returns {WebGLUniformLocation}\n         */\n        getUniform(name) {\n            return this.gl.getUniformLocation(this.pid, name);\n        }\n        /**\n         * This function has to be called to clean up the WebGL context.\n         * It is also called when the element is removed from the DOM.\n         * @returns {void}\n         */\n        destroy() {\n            this.target.shadify = undefined;\n            this.running = false;\n            this.gl.deleteProgram(this.pid);\n            this.gl.deleteShader(this.vert);\n            this.gl.deleteShader(this.frag);\n            this.canvas.remove();\n            this.pid = null;\n            this.vert = null;\n            this.frag = null;\n            window.removeEventListener(\"resize\", this.eventHandlerResize);\n            window.removeEventListener(\"mousemove\", this.eventHandlerMouse);\n        }\n        get quality() {\n            return this._quality;\n        }\n        set quality(value) {\n            this._quality = value;\n            this.resize();\n        }\n    }\n    /**\n     * Helper function for creating a WebGLShader in Wallpaper class\n     * @param {WebGLRenderingContext} gl\n     * @param {string} sourceCode\n     * @param {number} type\n     * @returns {WebGLShader}\n     */\n    function createShader(gl, sourceCode, type) {\n        const shader = gl.createShader(type);\n        gl.shaderSource(shader, sourceCode);\n        gl.compileShader(shader);\n        if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n            const info = gl.getShaderInfoLog(shader);\n            throw `Could not compile WebGL program. \\n\\n${info}`;\n        }\n        return shader;\n    }\n    /**\n     * Fetches the shader code from the given URL.\n     * If URL is from glslsandbox.com, it will fetch the code from the item page.\n     * @param {string} url\n     * @returns {Promise<string>}\n     */\n    function getCodeFromURL(url) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // link to glslsandbox website is a special case\n            if (url.includes(\"glslsandbox.com\") && url.includes(\"/e#\")) {\n                url = url.replace(\"/e#\", \"/item/\");\n                const res = yield fetch(url);\n                const text = yield res.json();\n                if (typeof text.code === \"undefined\")\n                    throw new Error(\"Could not get shader code\");\n                return text.code;\n            }\n            // otherwise we expect a link to a source file and return the code\n            const res = yield fetch(url);\n            return yield res.text();\n        });\n    }\n    /**\n     * Helper function for handling elements with the \"data-shader\" attribute.\n     * @param {HTMLElement} target\n     * @returns {void}\n     */\n    function handleHTMLElement(target) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (target == null)\n                return;\n            const url = (_a = target.attributes.getNamedItem(\"data-shader\")) === null || _a === void 0 ? void 0 : _a.value;\n            if (url == null || url.trim().length == 0)\n                return;\n            if ((target === null || target === void 0 ? void 0 : target.shadify) != null) {\n                if (target.shadify.target == target)\n                    target.shadify.loadShader(yield getCodeFromURL(url));\n                else\n                    target.shadify.destroy();\n            }\n            else {\n                console.log(target);\n                target.shadify = new Wallpaper(yield getCodeFromURL(url), target);\n            }\n        });\n    }\n    /**\n     * Initializes Shadify.\n     * @returns {void}\n     */\n    function init() {\n        const observer = new MutationObserver((mutationList) => {\n            console.log(mutationList, mutationList\n                .filter(x => mutationList.filter(y => y.target == x.target).length >= mutationList.length - 1));\n            mutationList\n                .filter(x => mutationList.filter(y => y.target == x.target).length >= mutationList.length - 1) // filter duplicate targets\n                .forEach((mutation) => handleHTMLElement(mutation.target));\n        });\n        observer.observe(document.body, {\n            subtree: true,\n            childList: false,\n            attributeFilter: [\"data-shader\"]\n        });\n        // Handle elements with the \"data-shader\" attribute\n        document.querySelectorAll('[data-shader]').forEach((e) => handleHTMLElement(e));\n        document.removeEventListener(\"DOMContentLoaded\", init);\n    }\n    document.addEventListener(\"DOMContentLoaded\", init);\n})(Shadify || (exports.Shadify = Shadify = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Shadify_1 = require(\"./Shadify\");\nexports.default = Shadify_1.Shadify;\nObject.assign(module.exports, Shadify_1.Shadify);\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(607);\n"],"names":["Shadify","__awaiter","this","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","Wallpaper","constructor","fragShader","target","running","eventHandlerResize","resize","bind","eventHandlerMouse","mouse","_quality","speed","tagName","canvas","document","createElement","append","body","radius","getComputedStyle","borderRadius","style","clipPath","position","left","right","top","bottom","width","height","updateAttributes","gl","getContext","loadShader","array","Float32Array","bindBuffer","ARRAY_BUFFER","createBuffer","bufferData","STATIC_DRAW","al","getAttribLocation","pid","vertexAttribPointer","FLOAT","enableVertexAttribArray","window","addEventListener","MutationObserver","_","observe","subtree","childList","attributes","attributeFilter","update","deleteProgram","vert","deleteShader","frag","createProgram","createShader","VERTEX_SHADER","attachShader","FRAGMENT_SHADER","linkProgram","useProgram","uniformResolution","getUniformLocation","uniformTime","uniformMouse","_a","_b","_c","_d","quality","Number","getNamedItem","zIndex","destroy","innerWidth","innerHeight","mouseX","clientX","mouseY","clientY","uniform2f","uniform1f","performance","now","viewport","clearColor","clear","COLOR_BUFFER_BIT","drawArrays","TRIANGLES","requestAnimationFrame","getUniform","name","shadify","undefined","remove","removeEventListener","sourceCode","type","shader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","getCodeFromURL","url","includes","replace","res","fetch","text","json","code","Error","handleHTMLElement","trim","length","console","log","init","mutationList","filter","x","y","forEach","mutation","querySelectorAll","Shadify_1","assign","module","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","call"],"sourceRoot":""}